# Build and Deploy a Node.JS Express App

trigger:
- master

variables:

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Docker Image Name
  dockerImageName: 'abdulmujeeb/hellonodecode'

  # Container Registry
  containerRegistry: 'Azure Registry'

  # Docker Image Tag 
  tag: v1
  
stages:
- stage: Build
  displayName: Build stage
  pool:
    vmImage: $(vmImageName)
  jobs:
  - job: BuildCode
    displayName: Build Code 
    # pool:
      # vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
      displayName: 'npm install, build and test'

    - script: |
        npm run test --if-present --reporter mocha-junit-reporter
      displayName: 'Run Mocha Unit Tests'

  - job: BuildContainer
    displayName: Build Scan and Push Docker Image
    dependsOn: 
      - BuildCode
    steps:
      - task: Docker@2
        displayName: Login to ACR 
        inputs:
          command: login
          containerRegistry: $(containerRegistry)

      - task: Docker@2
        displayName: Build Docker Image
        inputs:
          repository: $(dockerImageName)
          command: build
          Dockerfile: Dockerfile
          tags: $(tag)

      - script: |
          curl -s https://ci-tools.anchore.io/inline_scan-v0.4.1 | bash -s -- -p -r $(dockerImageName)
        displayName: 'Scan Docker Image for Vulnerabilities'

      - task: Docker@2
        displayName: Push Docker Image 
        inputs:
          containerRegistry: |
            $(containerRegistry)
          repository: $(dockerImageName)
          command: push
          tags: $(tag)      

  - job: SASTScan
    displayName: SAST Scan
    dependsOn: 
      - BuildCode
    pool:
      vmImage: $(vmImageName)

    steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'node-sast-scan'
          organization: 'mjborg'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'node-sast-scan'
          cliProjectName: 'node-sast-scan'
          cliSources: '.'
      - task: SonarCloudAnalyze@1
        displayName: 'Run SonarCloud code analysis'    
      - task: SonarCloudPublish@1
        displayName: 'Publish SonarCloud quality gate results'

  - job: OpenSourceScan
    displayName: Open Source Scan 
    dependsOn:
      - BuildCode
    steps:
      - task: WhiteSource Bolt@19
        displayName: "Run OSS Scan using Whitesource Bolt"

  - job: ContainerScan
    displayName: Static Container Scanning 
    dependsOn:
      - BuildContainer
    steps:
      - script: |
          curl -s https://ci-tools.anchore.io/inline_scan-v0.4.1 | bash -s -- -p -r $(dockerImageName)
        displayName: 'Scan Docker Image for Vulnerabilities'

  - job: GenerateArtifacts
    displayName: Generate Artifacts
    dependsOn:
      - BuildCode
      - SASTScan
      - OpenSourceScan
    
    steps:
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true
      - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifact: drop
